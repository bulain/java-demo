<beans xsi:schemaLocation="http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
        <property name="url" value="jdbc:derby:memory:orders;create=true" />
        <property name="username" value="" />
        <property name="password" value="" />
    </bean>
    <bean id="initDatabase" class="com.bulain.camel.sql.DatabaseBean" init-method="create" destroy-method="destroy">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="orderBean" class="com.bulain.camel.sql.OrderBean" />
    
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="placeholder" location="classpath:sql.properties" />
        <route id="generateOrder-route">
            <from uri="timer://foo?period=5s" />
            <transform>
                <method ref="orderBean" method="generateOrder" />
            </transform>
            <to uri="sql:{{sql.insertOrder}}" />
            <log message="Inserted new order ${body[id]}" />
        </route>
        <route id="processOrder-route">
            <from uri="sql:{{sql.selectOrder}}?consumer.onConsume={{sql.markOrder}}" />
            <to uri="bean:orderBean?method=processOrder" />
            <log message="${body}" />
        </route>
    </camelContext>
    
</beans>