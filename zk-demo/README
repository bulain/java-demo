This is a zk demo.
use the next technology: spring, mybatis, zk

For run test, please run the next command:
1, create mysql/oracle database
2, change next file depends on your database type.
   src/test/resources/jdbc.properties.mysql
   src/test/resources/jdbc.properties.oracle
3, run the next command depends on your database type.
   mvn test 
   mvn test -Poracle
    
For run development, please run the next command:
1, create mysql/oracle database
2, change next file depends on your database type.
   src/main/resources/jdbc.properties.mysql
   src/main/resources/jdbc.properties.oracle
2, run the next command depends on your database type.
   mvn migration:up -Dmigration.env=development
   mvn migration:up -Dmigration.env=development -Poracle
3, mvn clean package

For generator java and xml for mybatis
1, create mysql/oracle database and create tables.
2, change build.properties depends on your database type.
3, mvn dependency:copy-dependencies
4, run the next command: ant genfile

Useful information for migration plugin.
    migration:up 
    migration:down
    -Dmigration.env=development 
    -Dmigration.path=src/migration/mysql
    -Dmigration.down.steps=2
    -Dmigration.up.steps=2
    
commands:
mvn migration:new -Dmigration.description=description
mvn migration:up -Dmigration.env=development


Task to do:
1. layout*
2. crud single page*
3. crud multiple page
4. pagination/sorting*
5. constraint*
6. validation*
7. spring integration*
8. spring security*
9. menu
10. i18n*
11. page parameters
12. restful
13. testing

Key point:
1. Band box*
2. Dynamic Tab*
3. Dynamic Right click*
4. Dynamic Menu

Key zk utils:
BindUtils.postGlobalCommand(String, String, String, Map<String, Object>)
BindUtils.postNotifyChange(String, String, Object, String)

Executions.createComponents(String, Component, Map<?, ?>)
Executions.createComponentsDirectly(String, String, Component, Map<?, ?>)

Sessions.getCurrent(boolean)
WebApps.getCurrent()

@WireVariable
@Wire
@AfterCompose

Selectors.find(Page, String)
Selectors.wireVariables(Component, Object, List<VariableResolver>)
Selectors.wireComponents(Component, Object, boolean)
Selectors.wireEventListeners(Component, Object)

Events.postEvent(String, Component, Object)
Messagebox.show(String, String, int, String, EventListener<Event>)

Clients.reloadMessages(Locale)
Clients.showNotification(String)
Clients.evalJavaScript(String)
Clients.confirmClose(String)
Clients.alert(String)

SecurityUtil.isAccessible(String, Object)
SecurityUtil.isNoneGranted(String)
SecurityUtil.isAllGranted(String)
SecurityUtil.isAnyGranted(String)
SecurityUtil.getAuthentication()
SecurityUtil.getAuthentication(String)

<?taglib uri="http://www.zkoss.org/zkspring/security" prefix="sec"?>
sec:isAccessible(String, Object)
sec:isNoneGranted(String)
sec:isAllGranted(String)
sec:isAnyGranted(String)
sec:getAuthentication()
sec:getAuthentication(String

